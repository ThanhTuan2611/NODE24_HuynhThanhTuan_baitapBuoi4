--- USERS ---
CREATE TABLE users (
	id INT PRIMARY KEY AUTO_INCREMENT,
	user_name VARCHAR(255),
	create_at TIMESTAMP DEFAULT NOW()
)

INSERT INTO users (user_name, create_at) VALUES
('Nguyen Van A', '2015-09-10'),
('Tran Van C ', '2012-09-10'),
('Nguyen Van Ba', '2015-10-10'),
('Nguyen Thi Tu', '2016-11-11'),
('Nguyen Ngoc Nam', '2017-12-12'),
('Nguyen Thi Sau', '2010-10-10'),
('Huynh Van Nhat', '2022-10-09'),
('Vo Thi Dep', '2022-10-09');



--- PHOTO ---
CREATE TABLE photos(
	id INT PRIMARY KEY AUTO_INCREMENT,
	image_url VARCHAR(255),
	user_id INT,
	create_at TIMESTAMP DEFAULT NOW(),
	FOREIGN KEY (user_id) REFERENCES users(id)
)

INSERT INTO photos (image_url, user_id) VALUES
('picture of user1', 1),
('picture of user2', 2),
('picture of user3', 3),
('picture of user4', 4),
('picture of user5', 5)



--- COMMENT ---
CREATE TABLE comments(
	id INT PRIMARY KEY AUTO_INCREMENT,
	comment_text VARCHAR(255),
	user_id INT,
	photo_id INT,
	create_at TIMESTAMP DEFAULT NOW(),
	FOREIGN KEY (user_id) REFERENCES users(id),
	FOREIGN KEY (photo_id) REFERENCES photos(id)
)

INSERT INTO comments (comment_text, user_id, photo_id) VALUES
('cute', 1, 2),
('beautyful', 1, 2)


--- TAGS ---
CREATE TABLE tags(
	id INT PRIMARY KEY AUTO_INCREMENT,
	tag_name VARCHAR(255),
	create_at TIMESTAMP DEFAULT NOW()
)
INSERT INTO tags (tag_name) VALUES
('#cute'),
('#beauty'),
('#cool')


--- PHOTO_TAG ---
CREATE TABLE photo_tags(
	photo_id INT,
	tag_id INT,
	PRIMARY KEY(photo_id, tag_id),
	FOREIGN KEY (photo_id) REFERENCES photos(id),
	FOREIGN KEY (tag_id) REFERENCES tags(id)
)
INSERT INTO photo_tags (photo_id, tag_id) VALUES
(1,1),
(2,1),
(3,2)


--- LIKE ---
CREATE TABLE likes(
	photo_id INT,
	user_id INT,
	create_at TIMESTAMP DEFAULT NOW(),
	PRIMARY KEY(photo_id, user_id),
	FOREIGN KEY (photo_id) REFERENCES photos(id),
	FOREIGN KEY (user_id) REFERENCES users(id)	
)
INSERT INTO likes (photo_id, user_id) VALUES
(1,2),
(1,3),
(1,4),
(2,1),
(3,4)


--- FOLLOWS ---
CREATE TABLE follows(
	follower_id INT,
	followee_id INT,
	create_at TIMESTAMP DEFAULT NOW(),
	PRIMARY KEY(follower_id, followee_id),
	FOREIGN KEY (follower_id) REFERENCES users(id),
	FOREIGN KEY (followee_id) REFERENCES users(id)
)
INSERT INTO follows (follower_id, followee_id) VALUES
(1,2),
(1,3),
(2,3),
(3,1)


---- BÀI TẬP SQL YÊU CẦU ----

-- CÂU 1: Tìm 5 người sử dụng ứng dụng lâu nhất
	SELECT * FROM users
	ORDER BY create_at ASC
	LIMIT 5;


--- CÂU 2: Tìm 2 ngày có lượt đăng kí nhiều nhất
	SELECT DISTINCT DAY(create_at) as ngayDK FROM users
	ORDER BY ngayDK DESC
	LIMIT 2;

--- CÂU 3: Xác định người dùng không hoạt động (không đăng ảnh)
	SELECT DISTINCT users.id, users.user_name AS NguoiKhongDangAnh  FROM photos 
	RIGHT JOIN users ON photos.user_id = users.id
	WHERE user_id is NULL



--- CÂU 4: Xác định ảnh có nhiều like nhất và người dùng tạo ra nó
	SELECT likes.photo_id,
		   photos.image_url,
		   COUNT(likes.photo_id) AS tong_like
	FROM likes
	JOIN photos ON likes.photo_id = photos.id
	JOIN users ON likes.user_id = users.id
	GROUP BY likes.photo_id
	ORDER BY tong_like DESC
	LIMIT 1;


-- Câu 5: Tìm số lượng ảnh trung bình cho mỗi người
	SELECT (COUNT(photos.id) DIV COUNT(users.id)) as anhTB  FROM photos
	JOIN users ON photos.user_id = users.id
	

--- Câu 6: Tìm 5 người thường được haghtag
	


--- CÂU 7: Tìm những người đã thích 1 bức ảnh
	SELECT DISTINCT users.id, users.user_name as NguoiDaThich FROM likes
	INNER JOIN users ON likes.user_id = users.id
	WHERE user_id IS NOT NULL

